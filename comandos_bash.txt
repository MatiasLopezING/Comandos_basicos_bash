
Operaciones con Archivos:
Extraer primera columna de un archivo:
cut -d' ' -f1 archivo.txt
Extraer primera fila de un archivo:
head -n 1 archivo.txt
Contar líneas en un archivo:
wc -l archivo.txt
Contar palabras en un archivo:
wc -w archivo.txt
Buscar palabra o patrón en un archivo:
grep "palabra" archivo.txt
Mostrar últimas líneas de un archivo (logs):
tail -n 10 archivo.txt
Ordenar las líneas de un archivo:
sort archivo.txt
Eliminar duplicados tras ordenar:
sort archivo.txt | uniq
Redirigir salida de un comando a archivo:
comando > archivo.txt (sobrescribe)
comando >> archivo.txt (añade al final)

Manejo de Arrays en Bash:
Definir un array:
array=(elemento1 elemento2)
Acceder a un elemento:
echo ${array[0]}
Mostrar todos los elementos:
echo ${array[@]}
Añadir un elemento:
array+=(nuevo_elemento)
Modificar un elemento:
array[1]="nuevo_valor"
Eliminar un elemento:
unset array[1]
Obtener tamaño del array:
echo ${#array[@]}
Iterar sobre un array:
for elemento in "${array[@]}"; do echo $elemento; done
Unir elementos en cadena:
cadena=$(IFS=","; echo "${array[*]}")
Buscar un elemento en un array:
for i in "${array[@]}"; do
    if [ "$i" == "elemento2" ]; then
        echo "Elemento encontrado"
        break
    fi
done

Verificación de Archivos y Directorios:
-e: Verifica si existe el archivo o directorio.
if [ -e "/ruta/al/archivo" ]; then ... fi
-d: Verifica si es un directorio.
if [ -d "/ruta/al/directorio" ]; then ... fi
-f: Verifica si es un archivo regular.
if [ -f "/ruta/al/archivo" ]; then ... fi
-r: Verifica permisos de lectura.
if [ -r "/ruta/al/archivo" ]; then ... fi
-w: Verifica permisos de escritura.
if [ -w "/ruta/al/archivo" ]; then ... fi
-x: Verifica permisos de ejecución.
if [ -x "/ruta/al/archivo" ]; then ... fi

Estructuras de Control:
if...else:
if [ condición ]; then
    # Código
elif [ otra_condición ]; then
    # Otro código
else
    # Código alternativo
fi

for loop:
for variable in lista; do echo $variable; done

while loop:
while [ condición ]; do # Código; done

until loop:
until [ condición ]; do # Código; done

case:
case variable in
    valor1) # Código ;;
    valor2) # Código ;;
    *) # Código ;;
esac

Operadores de Comparación:
Números:
-eq: Igual.
-ne: No igual.
-lt: Menor que.
-le: Menor o igual.
-gt: Mayor que.
-ge: Mayor o igual.

Cadenas:
=: Igualdad.
!=: No igual.
-z: Longitud 0.
-n: Longitud mayor que 0.

Operadores Aritméticos:
if (( 5 > 3 )); then ... fi
suma=$((3 + 4))

Globbing:
*: Representa cualquier cadena.
?: Representa un carácter.
[ ]: Representa un rango de caracteres.

Ejemplo:
for archivo in *.txt; do
    echo "Procesando archivo: $archivo"
done

